{"version":3,"sources":["components/Navbar.js","actions/index.js","components/ProductItem.js","components/Products.js","config/notification.js","components/AddProduct.js","components/SingleProduct.js","components/CartItem.js","components/Cart.js","components/App.js","reducers/index.js","store/index.js","index.js"],"names":["Navbar","calculateTotalCount","items","props","cart","total","qty","style1","style2","style3","path","this","location","pathname","backgroundColor","className","to","src","alt","style","React","Component","connectedAppComponent","connect","state","withRouter","addProducts","type","addNewProductDB","item","addProductsOnLoad","dispatch","a","fetch","response","json","data","products","addProductToCart","ProductItem","saveAfterEdit","product","editProduct","title","nameRef","current","value","description","desRef","price","priceRef","rating","ratingRef","id","img","setState","editable","cancelEdit","startEditing","addToCart","createRef","onClick","event","target","history","push","fontSize","color","marginTop","ref","defaultValue","width","Products","sortedOff","sorted","sortedOn","listToRender","sortedList","sort","b","length","map","key","showNotification","text","Noty","layout","theme","timeout","show","AddProduct","addNewProduct","newProduct","imageRef","formData","URLSearchParams","append","method","body","status","SingleProduct","window","search","get","ind","findIndex","element","margin","display","CartItem","Cart","iterator","totalPrice","calculateTotal","marginLeft","App","componentDidMount","exact","render","component","initialProductsState","initialCartState","combineReducers","action","index","filteredItems","filter","i","splice","console","log","newState","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createdStore","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bfa42ebf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Navbar extends React.Component {\n  // Calculate total number of items in cart.\n  calculateTotalCount = () => {\n    const { items } = this.props.cart;\n    let total = 0;\n    for (const iterator of items) {\n      total += iterator.qty;\n    }\n    return total;\n  };\n\n  // Render navbar.\n  render() {\n    const path = this.props.location.pathname;\n\n    // Decide the style for navigation links.\n    let style1, style2, style3;\n    if (path === \"/ecommerce-website/\") {\n      style1 = { backgroundColor: \"rgb(28, 88, 152)\" };\n      style2 = { backgroundColor: \"rgb(28, 30, 33)\" };\n      style3 = { backgroundColor: \"white\" };\n    } else if (path === \"/ecommerce-website/add-product\") {\n      style2 = { backgroundColor: \"rgb(28, 88, 152)\" };\n      style1 = { backgroundColor: \"rgb(28, 30, 33)\" };\n      style3 = { backgroundColor: \"white\" };\n    } else if (path === \"/ecommerce-website/cart\") {\n      style2 = { backgroundColor: \"rgb(28, 30, 33)\" };\n      style1 = { backgroundColor: \"rgb(28, 30, 33)\" };\n      style3 = { backgroundColor: \"rgb(28, 88, 152)\" };\n    }\n    return (\n      <div className=\"navbar\">\n        <Link className=\"logo-link\" to=\"/ecommerce-website/\">\n          <img\n            className=\"logo\"\n            src=\"https://image.flaticon.com/icons/svg/579/579427.svg\"\n            alt=\"Logo\"\n          ></img>\n          <div className=\"app-name\">&nbsp; NinjaMart</div>\n        </Link>\n        <div className=\"tabs\">\n          <Link to=\"/ecommerce-website/\">\n            <button style={style1} className=\"nav-button\">\n              Products\n            </button>\n          </Link>\n          <Link to=\"/ecommerce-website/add-product\">\n            <button style={style2} className=\"nav-button\">\n              Add Product\n            </button>\n          </Link>\n        </div>\n        <Link className=\"cart-icon-link\" to=\"/ecommerce-website/cart\">\n          <div style={style3} className=\"cart-icon-container\">\n            <img\n              className=\"cart-icon\"\n              src=\"https://image.flaticon.com/icons/svg/779/779006.svg\"\n              alt=\"cartIcon\"\n            ></img>\n            <span className=\"cart-count\">{this.calculateTotalCount()}</span>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n\n// Use context API\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(Navbar);\nexport default withRouter(connectedAppComponent);\n","// Action Types\nexport const ADD_PRODUCTS = \"ADD_PRODUCTS\";\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\nexport const INCREASE_QTY_ITEM_CART = \"INCREASE_QTY_ITEM_CART\";\nexport const DECREASE_QTY_ITEM_CART = \"DECREASE_QTY_ITEM_CART\";\nexport const DELETE_ITEM_CART = \"DELETE_ITEM_CART\";\nexport const ADD_NEW_PRODUCT = \"ADD_NEW_PRODUCT\";\nexport const EDIT_PRODUCT = \"EDIT_PRODUCT\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\n\n// Action Creators for products\n\n// Add multple products to cart\nexport function addProducts(items) {\n  return {\n    type: ADD_PRODUCTS,\n    items,\n  };\n}\n\n// Add a single product\nexport function addNewProductDB(item) {\n  return {\n    type: ADD_NEW_PRODUCT,\n    item,\n  };\n}\n\n// edit a single product\nexport function editProductDB(item) {\n  return {\n    type: EDIT_PRODUCT,\n    item,\n  };\n}\n\n// delete a single product\nexport function deleteProductDB(item) {\n  return {\n    type: DELETE_PRODUCT,\n    item,\n  };\n}\n\n// Async functions for products\n\n// Add multple products to cart on the load fetch from the API\nexport function addProductsOnLoad() {\n  const url = `https://my-json-server.typicode.com/arnavdesk/ecommerce-website/db`;\n  return async function (dispatch) {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.products) dispatch(addProducts(data.products));\n    else dispatch(addProducts([]));\n  };\n}\n\nexport function postANewPorudct(item) {\n  const url = `https://my-json-server.typicode.com/arnavdesk/ecommerce-website/products`;\n  return async function (dispatch) {\n    const formData = new URLSearchParams();\n    for (const key in item) {\n      formData.append(key, item[key]);\n    }\n    const response = await fetch(url, {\n      method: \"post\",\n      body: formData,\n    });\n    if (response.status === 201) dispatch(addNewProductDB(item));\n    else dispatch({ type: \"BLANK\" });\n  };\n}\n\n// Action creators in cart\n// Add products to cart\n\nexport function addProductToCart(item) {\n  return {\n    type: ADD_PRODUCT_TO_CART,\n    item,\n  };\n}\n\n// Increase quantity of cart of an item\nexport function increaseQtyItemOfCart(item) {\n  return {\n    type: INCREASE_QTY_ITEM_CART,\n    item,\n  };\n}\n\n// decrese quantity of cart of an item\nexport function decreaseQtyItemOfCart(item) {\n  return {\n    type: DECREASE_QTY_ITEM_CART,\n    item,\n  };\n}\n\n// delete item of cart\nexport function deleteItemOfCart(item) {\n  return {\n    type: DELETE_ITEM_CART,\n    item,\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductToCart } from \"../actions/index\";\nimport { editProductDB, deleteProductDB } from \"../actions/index\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProductItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editable: false,\n    };\n    this.nameRef = React.createRef();\n    this.desRef = React.createRef();\n    this.priceRef = React.createRef();\n    this.ratingRef = React.createRef();\n  }\n\n  // After editing dispatch an action and save product.\n  saveAfterEdit = () => {\n    const { dispatch, product } = this.props;\n    const editProduct = {};\n    editProduct.title = this.nameRef.current.value;\n    editProduct.description = this.desRef.current.value;\n    editProduct.price = this.priceRef.current.value;\n    editProduct.rating = this.ratingRef.current.value;\n    editProduct.id = product.id;\n    editProduct.img = product.img;\n    dispatch(editProductDB(editProduct));\n    this.setState({ editable: false });\n  };\n\n  // Stop editing\n  cancelEdit = () => {\n    this.setState({ editable: false });\n  };\n\n  // Start editing.\n  startEditing = () => {\n    this.setState({ editable: true });\n  };\n\n  // Add an item to cart, dispatch action.\n  addToCart = () => {\n    const { dispatch } = this.props;\n    dispatch(addProductToCart(this.props.product));\n  };\n\n  // Render function.\n  render() {\n    const { editable } = this.state;\n    const { product, dispatch } = this.props;\n    return (\n      <div\n        onClick={(event) => {\n          if (\n            event.target.className === \"action-button\" ||\n            event.target.className === \"action-icons\" ||\n            event.target.className === \"edit-text\"\n          ) {\n            return;\n          }\n          this.props.history.push(\n            \"/ecommerce-website/product?id=\" + product.id\n          );\n        }}\n        className=\"product-item\"\n        id={\"item\" + product.id}\n      >\n        <div className=\"left-block-products\">\n          <img className=\"product-item-img\" src={product.img} alt=\"product\" />\n        </div>\n        {!editable && (\n          <div className=\"end-block-products\">\n            <div style={{ fontSize: 25 }}>{product.title}</div>\n            <div style={{ fontSize: 18, color: \"#777\", marginTop: 5 }}>\n              Rs. {product.price}\n            </div>\n            <div style={{ fontSize: 18, color: \"#777\", marginTop: 5 }}>\n              Rating : {product.rating}\n            </div>\n            <div>Description : {product.description}</div>\n            <div className=\"products-actions\">\n              <button className=\"action-button\" onClick={this.addToCart}>\n                Add to Cart\n              </button>\n              <img\n                className=\"action-icons\"\n                src=\"https://image.flaticon.com/icons/svg/684/684930.svg\"\n                alt=\"Edit\"\n                onClick={this.startEditing}\n              />\n              <img\n                className=\"action-icons\"\n                src=\"https://image.flaticon.com/icons/svg/3221/3221897.svg\"\n                alt=\"Delete\"\n                onClick={() => {\n                  dispatch(deleteProductDB(product));\n                }}\n              />\n            </div>\n          </div>\n        )}\n        {editable && (\n          <div className=\"end-block-products\">\n            <input\n              className=\"edit-text\"\n              ref={this.nameRef}\n              style={{ fontSize: 25 }}\n              defaultValue={product.title}\n            ></input>\n            <div>\n              Rs.\n              <input\n                className=\"edit-text\"\n                ref={this.priceRef}\n                style={{\n                  width: \"70px\",\n                  fontSize: 18,\n                  color: \"#777\",\n                  marginTop: 5,\n                }}\n                defaultValue={product.price}\n              ></input>\n            </div>\n            <div>\n              Rating :\n              <input\n                className=\"edit-text\"\n                ref={this.ratingRef}\n                style={{\n                  width: \"30px\",\n                  fontSize: 18,\n                  color: \"#777\",\n                  marginTop: 5,\n                }}\n                defaultValue={product.rating}\n              ></input>\n            </div>\n            <div>\n              Description :{\" \"}\n              <input\n                className=\"edit-text\"\n                ref={this.desRef}\n                style={{ width: \"100%\" }}\n                defaultValue={product.description}\n              ></input>\n            </div>\n            <div className=\"products-actions\">\n              <button className=\"action-button\" onClick={this.cancelEdit}>\n                Cancel\n              </button>\n              <button className=\"action-button\" onClick={this.saveAfterEdit}>\n                Save\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n    cart: state.cart,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(ProductItem);\nexport default withRouter(connectedAppComponent);\n","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport { connect } from \"react-redux\";\n\nclass Products extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      sorted: false,\n    };\n  }\n\n  // Turn off sort by price.\n  sortedOff = () => {\n    this.setState({ sorted: false });\n  };\n\n  // Turn on sort by price.\n  sortedOn = () => {\n    this.setState({ sorted: true });\n  };\n\n  render() {\n    const { sorted } = this.state;\n    const { items } = this.props.products;\n    const sortedList = [...items];\n    sortedList.sort(function (a, b) {\n      return a.price - b.price;\n    });\n\n    let listToRender;\n\n    if (sorted === true) {\n      listToRender = sortedList;\n    } else {\n      listToRender = items;\n    }\n\n    return (\n      <div className=\"products\">\n        <div className=\"sort-btn\">\n          <div onClick={this.sortedOn}>Sort By Price &nbsp;</div>\n          {sorted && (\n            <img\n              src=\"https://image.flaticon.com/icons/svg/561/561189.svg\"\n              alt=\"cross\"\n              onClick={this.sortedOff}\n            ></img>\n          )}\n        </div>\n        {listToRender.length > 0 ? (\n          listToRender.map((item) => {\n            return <ProductItem product={item} key={item.id} />;\n          })\n        ) : (\n          <h1>No Products to show</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(Products);\nexport default connectedAppComponent;\n","import Noty from \"noty\";\n\nconst showNotification = (text) => {\n  new Noty({\n    text: text,\n    layout: \"bottomRight\",\n    theme: \"sunset\",\n    type: \"alert\",\n    timeout: 500,\n  }).show();\n};\n\nexport { showNotification };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { postANewPorudct } from \"../actions/index\";\nimport { showNotification } from \"../config/notification\";\n\nclass AddProduct extends Component {\n  constructor() {\n    super();\n    this.nameRef = React.createRef();\n    this.desRef = React.createRef();\n    this.priceRef = React.createRef();\n    this.ratingRef = React.createRef();\n    this.imageRef = React.createRef();\n  }\n\n  // Handle adding a new product\n  addNewProduct = () => {\n    const { dispatch } = this.props;\n    const newProduct = {};\n    newProduct.title = this.nameRef.current.value;\n    newProduct.description = this.desRef.current.value;\n    newProduct.price = this.priceRef.current.value;\n    newProduct.rating = this.ratingRef.current.value;\n    newProduct.img = this.imageRef.current.value;\n    if (\n      newProduct.title === \"\" ||\n      newProduct.description === \"\" ||\n      newProduct.price === \"\" ||\n      newProduct.rating === \"\" ||\n      newProduct.img === \"\"\n    ) {\n      showNotification(\"No field can be blank\");\n      return;\n    }\n    dispatch(postANewPorudct(newProduct));\n    this.props.history.push(\n      \"/ecommerce-website/#item\" + (this.props.products.items.length + 1)\n    );\n  };\n  render() {\n    return (\n      <div className=\"add-prod-div\">\n        <h2>Add a Product</h2>\n        <div className=\"form-add-prod\">\n          <label>Name</label>\n          <input type=\"text\" id=\"name\" ref={this.nameRef}></input>\n          <label>Description</label>\n          <input type=\"text\" id=\"description\" ref={this.desRef}></input>\n          <label>Price</label>\n          <input type=\"text\" id=\"price\" ref={this.priceRef}></input>\n          <label>Rating</label>\n          <input type=\"text\" id=\"rating\" ref={this.ratingRef}></input>\n          <label>Image Link</label>\n          <input type=\"text\" id=\"img\" ref={this.imageRef}></input>\n          <button\n            className=\"action-button\"\n            onClick={() => this.addNewProduct()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Use context API and connect state to props.\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(AddProduct);\nexport default connectedAppComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProductToCart } from \"../actions\";\n\nclass SingleProduct extends Component {\n  constructor(props) {\n    super(props);\n    const { products } = this.props;\n    const urlParams = new URLSearchParams(window.location.search);\n    const id = urlParams.get(\"id\");\n    let ind = products.items.findIndex(function (element) {\n      return element.id + \"\" === id;\n    });\n    this.item = products.items[ind];\n  }\n\n  // Add item to cart and dispatch action\n  addToCart = () => {\n    const { dispatch } = this.props;\n    dispatch(addProductToCart(this.item));\n  };\n\n  render() {\n    const item = this.item;\n    return (\n      <div className=\"single-product\">\n        <div className=\"upper-block\">\n          <img src={item.img} alt=\"product\"></img>\n          <div>\n            <div>{item.title}</div>\n            <div>Rs. {item.price}</div>\n            <div>Rating: {item.rating}</div>\n          </div>\n        </div>\n        <div className=\"lower-block\">\n          <div>Description: {item.description}</div>\n          <button\n            style={{ margin: \"auto\", display: \"block\", marginTop: \"10px\" }}\n            className=\"action-button\"\n            onClick={this.addToCart}\n          >\n            Add to Cart\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(SingleProduct);\nexport default connectedAppComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  increaseQtyItemOfCart,\n  decreaseQtyItemOfCart,\n  deleteItemOfCart,\n} from \"../actions/index\";\nimport { withRouter } from \"react-router-dom\";\n\nclass CartItem extends React.Component {\n  render() {\n    const { product, dispatch } = this.props;\n\n    return (\n      <div\n        onClick={(event) => {\n          if (\n            event.target.className === \"action-button\" ||\n            event.target.className === \"action-icons\"\n          ) {\n            return;\n          }\n          this.props.history.push(\n            \"/ecommerce-website/product?id=\" + product.id\n          );\n        }}\n        className=\"cart-item\"\n      >\n        <div className=\"left-block\">\n          <img className=\"cart-item-img\" src={product.img} alt=\"product\" />\n        </div>\n        <div className=\"right-block\">\n          <div style={{ fontSize: 25 }}>{product.title}</div>\n          <div style={{ fontSize: 18, color: \"#777\", marginTop: 5 }}>\n            Rs. {product.price}\n          </div>\n          <div style={{ fontSize: 18, color: \"#777\", marginTop: 5 }}>\n            Qty : {product.qty}\n          </div>\n        </div>\n        <div className=\"end-block\">\n          <div className=\"cart-item-actions\">\n            {/* buttons */}\n            <img\n              className=\"action-icons\"\n              src=\"https://image.flaticon.com/icons/svg/929/929409.svg\"\n              alt=\"Increase\"\n              onClick={() => {\n                dispatch(increaseQtyItemOfCart(product)); //Dispatch increase item from cart\n              }}\n            />\n            <img\n              className=\"action-icons\"\n              src=\"https://image.flaticon.com/icons/svg/753/753340.svg\"\n              alt=\"Decrease\"\n              onClick={() => {\n                dispatch(decreaseQtyItemOfCart(product)); //Dispatch decrease item from cart\n              }}\n            />\n            <img\n              className=\"action-icons\"\n              src=\"https://image.flaticon.com/icons/svg/3221/3221897.svg\"\n              alt=\"Delete\"\n              onClick={() => {\n                dispatch(deleteItemOfCart(product)); //Dispatch delete item from cart\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\n// Use context API\nconst connectedAppComponent = connect(mapStateToProps)(CartItem);\n\n// To route to some state use \"withRouter\".\nexport default withRouter(connectedAppComponent);\n","import React from \"react\";\nimport CartItem from \"./CartItem\";\nimport { connect } from \"react-redux\";\nclass Cart extends React.Component {\n  // Calculate total price for cart.\n  calculateTotal(items) {\n    let price = 0;\n    for (const iterator of items) {\n      price += iterator.price * iterator.qty;\n    }\n    return price;\n  }\n\n  render() {\n    const { items } = this.props.cart;\n    const totalPrice = this.calculateTotal(items);\n    return (\n      <div className=\"cart\">\n        {items.map((item) => {\n          return <CartItem product={item} key={item.id} />;\n        })}\n        {items.length > 0 ? (\n          <div style={{ marginLeft: \"auto\" }}>Total Price : {totalPrice}</div>\n        ) : (\n          <h1>Cart Empty!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(Cart);\nexport default connectedAppComponent;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Products from \"./Products\";\nimport AddProduct from \"./AddProduct\";\nimport SingleProduct from \"./SingleProduct\";\nimport Cart from \"./Cart\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProductsOnLoad } from \"../actions/index\";\n\n// Add routing and different routes\nclass App extends React.Component {\n  componentDidMount = () => {\n    const { dispatch, products } = this.props;\n    if (products.items.length === 0) dispatch(addProductsOnLoad());\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Route\n            exact\n            path=\"/ecommerce-website/\"\n            render={(props) => <Products {...props} />}\n          />\n          <Route path=\"/ecommerce-website/cart\" component={Cart} />\n          <Route path=\"/ecommerce-website/add-product\" component={AddProduct} />\n          <Route path=\"/ecommerce-website/product\" component={SingleProduct} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n    cart: state.cart,\n  };\n}\n\nconst connectedAppComponent = connect(mapStateToProps)(App);\nexport default connectedAppComponent;\n","import { combineReducers } from \"redux\";\nimport { showNotification } from \"../config/notification\";\nimport {\n  ADD_PRODUCTS,\n  ADD_PRODUCT_TO_CART,\n  INCREASE_QTY_ITEM_CART,\n  DECREASE_QTY_ITEM_CART,\n  DELETE_ITEM_CART,\n  ADD_NEW_PRODUCT,\n  EDIT_PRODUCT,\n  DELETE_PRODUCT,\n} from \"../actions/index\";\n\nconst initialProductsState = {\n  items: [],\n};\n\n// Handle products\nexport function products(state = initialProductsState, action) {\n  switch (action.type) {\n    // Add products to cart\n    case ADD_PRODUCTS:\n      return { ...state, items: action.items };\n    // Add any new products\n    case ADD_NEW_PRODUCT: {\n      action.item.id = state.items.length + 1;\n      showNotification(\"Product Added\");\n      return { ...state, items: [...state.items, action.item] };\n    }\n    // Edit a product (find by ID the index, remove orignal item, add new item at index.)\n    case EDIT_PRODUCT: {\n      let index;\n      const filteredItems = state.items.filter(function (element, i) {\n        if (element.id === action.item.id) {\n          index = i;\n        }\n        return element.id !== action.item.id;\n      });\n      if (index === -1) {\n        showNotification(\"Item not found\");\n        return state;\n      } else {\n        showNotification(\"Item edited\");\n        filteredItems.splice(index, 0, action.item);\n        return { ...state, items: filteredItems };\n      }\n    }\n    // Delete a particular product\n    case DELETE_PRODUCT: {\n      const filteredItems = state.items.filter(function (element) {\n        return element.id !== action.item.id;\n      });\n      showNotification(\"Removed From Listing\");\n      return { ...state, items: filteredItems };\n    }\n    default:\n      return state;\n  }\n}\n\nconst initialCartState = {\n  items: [],\n};\n\n// Handle cart\nexport function cart(state = initialCartState, action) {\n  switch (action.type) {\n    // Find product by id, if not added into the cart first\n    // add create new state and increase the quantity\n    case ADD_PRODUCT_TO_CART:\n    case INCREASE_QTY_ITEM_CART: {\n      console.log(state);\n      let index = state.items.findIndex(function (element) {\n        return element.id === action.item.id;\n      });\n      if (index === -1) {\n        showNotification(\"1 Item added to cart\");\n        action.item.qty = 1;\n        return { ...state, items: [...state.items, action.item] };\n      } else {\n        showNotification(\"Quantity increased by 1\");\n        const newState = { ...state };\n        newState.items[index].qty++;\n        return newState;\n      }\n    }\n    // Find product by id the index, create new state and decrease the quantity at index\n    case DECREASE_QTY_ITEM_CART: {\n      let index = state.items.findIndex(function (element) {\n        return element.id === action.item.id;\n      });\n      if (index === -1) {\n        return state;\n      } else {\n        const newState = { ...state };\n        if (newState.items[index].qty === 1) {\n          return state;\n        }\n        newState.items[index].qty--;\n        showNotification(\"Qty Decreased by 1\");\n        return newState;\n      }\n    }\n    // Delete item from cart in case the product is delete from the DB\n    // and Delete item from cart\n    case DELETE_PRODUCT:\n    case DELETE_ITEM_CART: {\n      const filteredItems = state.items.filter(function (element) {\n        return element.id !== action.item.id;\n      });\n      showNotification(\"Removed From Cart\");\n      return { ...state, items: filteredItems };\n    }\n    // Edit product and save\n    case EDIT_PRODUCT: {\n      let index = -1;\n      const filteredItems = state.items.filter(function (element, i) {\n        if (element.id === action.item.id) {\n          index = i;\n        }\n        return element.id !== action.item.id;\n      });\n      if (index === -1) {\n        return state;\n      } else {\n        action.item.qty = state.items[index].qty;\n        filteredItems.splice(index, 0, action.item);\n        return { ...state, items: filteredItems };\n      }\n    }\n    default:\n      return state;\n  }\n}\n\n// Combine reducers\nexport default combineReducers({\n  products,\n  cart,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport \"../../node_modules/noty/lib/noty.css\";\nimport \"../../node_modules/noty/lib/themes/sunset.css\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage, //use local storage\n};\n\n// Create a new reducer which can persist data within refreshes.\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n// Create store using the specs.\nconst createdStore = store();\n\n// Persist gate for redux persistance library which stores \"store\" in local storage.\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={createdStore.persistor}>\n      <Provider store={createdStore.store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}